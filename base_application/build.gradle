apply plugin: 'com.android.library'

android {
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion

        versionCode 1
        versionName "1.0"


        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //--------------测试库--------------
    testImplementation Dependence.Test_Junit
    androidTestImplementation Dependence.Test_X_Support_Runner
    androidTestImplementation Dependence.Test_X_Support_Espresso

    //内存泄漏检测
    debugApi Dependence.Leakcanary
    debugApi 'cat.ereza:customactivityoncrash:2.3.0' // crash提示，只在debug版本上用，便于查看崩溃内容

    //--------------基础库--------------

    //64k支持
    api Dependence.X_Multidex

    // 基础工具类
    api Dependence.Utilsjava
    api Dependence.UtilsRx
    api Dependence.Utilsandroid

    //响应式
    api Dependence.RxJava
    api Dependence.RxAndroid
    api Dependence.Rxrelay

    //--------------生命周期--------------

    api Dependence.Phoenix

    //--------------UI库--------------

    //AndroidX
    api Dependence.Support_X_Appcompat
    api Dependence.Support_X_RecyclerView

    //腾讯 UI库
    api Dependence.Qmui_Ui
    api Dependence.Qmui_Lint
    api Dependence.Qmui_Lint2

    api Dependence.Qmui_Arch
    api Dependence.Qmui_ArchAnnotation
    // annotationProcessor 'com.qmuiteam:arch-compiler:0.7.0'

    //RecyclerView Adapter
    api Dependence.CymChad_BaseAdapter

    //--------------网络--------------

    api Dependence.Retrofit2_Retrofit
    api Dependence.Retrofit2_GsonConverter
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        if (useLocalModule) {
            substitute module("$myGroup:utils-java") because "I want to debug with new code" with project(":utils_java")
            substitute module("$myGroup:utils-rx") because "I want to debug with new code" with project(":utils_rx")
            substitute module("$myGroup:utils-android") because "I want to debug with new code" with project(":utils_android")
        }
    }
}


// 如果使用本地库，则不能发布版本，因为依赖的不是maven内的库，而是本地库，发布了也不能正常使用
if (!useLocalModule) {
    apply plugin: "com.vanniktech.maven.publish"
}

